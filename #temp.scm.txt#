$ make dev
mit-scheme --silent --load "test.scm" --eval "(exit)"
prove6 ! g=((some (? x)) (some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? x) foo) (bottom))
 arg2=(() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())
 (cdr g)=((some (? y)) (neq (? x) (? y)))
 `(r! ,l)=(r! ())
 1st append=
 2nd append=(r! () (some (? y)) (neq (? x) (? y)))
prove6 ! g=(r! () (some (? y)) (neq (? x) (? y)))
prove6 C
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? y) foo) ((? x) foo) (bottom))
 arg2=((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ())
 (cdr g)=((neq (? x) (? y)))
 `(r! ,l)=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 1st append=
 2nd append=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 ! g=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 C
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) foo) ((? x . 3) foo) ((? y) foo) ((? x) foo) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) foo) ((? x) foo) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
 1st append=
 2nd append=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... (((? x . 4) foo) ((? y . 3) foo) ((? x . 3) foo) ((? y) foo) ((? x) foo) (bottom))
 arg2=((((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) foo) ((? x) foo) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())) ((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ())) (((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y . 3) foo) ((? x . 3) foo) ((? y) foo) ((? x) foo) (bottom)) 4 ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
 (cdr g)=(! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
 `(r! ,l)=(r! (((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) foo) ((? x) foo) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())))
 1st append=
 2nd append=(r! (((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) foo) ((? x) foo) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 ! g=(r! (((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) foo) ((? x) foo) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 C
prove6 ! g=(! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 B
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 D
prove6 ! g=((neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? y) bar) ((? x) foo) (bottom))
 arg2=((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ())
 (cdr g)=((neq (? x) (? y)))
 `(r! ,l)=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 1st append=
 2nd append=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 ! g=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 C
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) bar) ((? x . 3) foo) ((? y) bar) ((? x) foo) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) bar) ((? x) foo) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
 1st append=
 2nd append=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 D
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) bar) ((? x . 3) foo) ((? y) bar) ((? x) foo) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)))) (((? y) bar) ((? x) foo) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
 1st append=
 2nd append=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 ! g=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 C
prove6 ! g=()
prove6 A
print-frame (((? y . 3) bar) ((? x . 3) foo) ((? y) bar) ((? x) foo) (bottom))
y = bar
x = foo
prove6 ! g=((neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? y) baz) ((? x) foo) (bottom))
 arg2=((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ())
 (cdr g)=((neq (? x) (? y)))
 `(r! ,l)=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 1st append=
 2nd append=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 ! g=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 C
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) baz) ((? x . 3) foo) ((? y) baz) ((? x) foo) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) baz) ((? x) foo) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
 1st append=
 2nd append=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 D
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) baz) ((? x . 3) foo) ((? y) baz) ((? x) foo) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)))) (((? y) baz) ((? x) foo) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
 1st append=
 2nd append=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 ! g=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) foo) (bottom)) 2 ()))
prove6 C
prove6 ! g=()
prove6 A
print-frame (((? y . 3) baz) ((? x . 3) foo) ((? y) baz) ((? x) foo) (bottom))
y = baz
x = foo
prove6 ! g=((neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? x)) (some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? x) bar) (bottom))
 arg2=(() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())
 (cdr g)=((some (? y)) (neq (? x) (? y)))
 `(r! ,l)=(r! ())
 1st append=
 2nd append=(r! () (some (? y)) (neq (? x) (? y)))
prove6 ! g=(r! () (some (? y)) (neq (? x) (? y)))
prove6 C
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? y) foo) ((? x) bar) (bottom))
 arg2=((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ())
 (cdr g)=((neq (? x) (? y)))
 `(r! ,l)=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 1st append=
 2nd append=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 ! g=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 C
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) foo) ((? x . 3) bar) ((? y) foo) ((? x) bar) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) foo) ((? x) bar) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
 1st append=
 2nd append=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 D
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) foo) ((? x . 3) bar) ((? y) foo) ((? x) bar) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)))) (((? y) foo) ((? x) bar) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
 1st append=
 2nd append=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 ! g=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 C
prove6 ! g=()
prove6 A
print-frame (((? y . 3) foo) ((? x . 3) bar) ((? y) foo) ((? x) bar) (bottom))
y = foo
x = bar
prove6 ! g=((neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? y) bar) ((? x) bar) (bottom))
 arg2=((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ())
 (cdr g)=((neq (? x) (? y)))
 `(r! ,l)=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 1st append=
 2nd append=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 ! g=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 C
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) bar) ((? x . 3) bar) ((? y) bar) ((? x) bar) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) bar) ((? x) bar) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
 1st append=
 2nd append=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... (((? x . 4) bar) ((? y . 3) bar) ((? x . 3) bar) ((? y) bar) ((? x) bar) (bottom))
 arg2=((((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) bar) ((? x) bar) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())) ((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ())) (((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y . 3) bar) ((? x . 3) bar) ((? y) bar) ((? x) bar) (bottom)) 4 ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
 (cdr g)=(! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
 `(r! ,l)=(r! (((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) bar) ((? x) bar) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())))
 1st append=
 2nd append=(r! (((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) bar) ((? x) bar) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 ! g=(r! (((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) bar) ((? x) bar) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 C
prove6 ! g=(! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 B
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 D
prove6 ! g=((neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? y) baz) ((? x) bar) (bottom))
 arg2=((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ())
 (cdr g)=((neq (? x) (? y)))
 `(r! ,l)=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 1st append=
 2nd append=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 ! g=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 C
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) baz) ((? x . 3) bar) ((? y) baz) ((? x) bar) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) baz) ((? x) bar) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
 1st append=
 2nd append=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 D
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) baz) ((? x . 3) bar) ((? y) baz) ((? x) bar) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)))) (((? y) baz) ((? x) bar) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
 1st append=
 2nd append=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 ! g=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) bar) (bottom)) 2 ()))
prove6 C
prove6 ! g=()
prove6 A
print-frame (((? y . 3) baz) ((? x . 3) bar) ((? y) baz) ((? x) bar) (bottom))
y = baz
x = bar
prove6 ! g=((neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? x)) (some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? x) baz) (bottom))
 arg2=(() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())
 (cdr g)=((some (? y)) (neq (? x) (? y)))
 `(r! ,l)=(r! ())
 1st append=
 2nd append=(r! () (some (? y)) (neq (? x) (? y)))
prove6 ! g=(r! () (some (? y)) (neq (? x) (? y)))
prove6 C
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? y) foo) ((? x) baz) (bottom))
 arg2=((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ())
 (cdr g)=((neq (? x) (? y)))
 `(r! ,l)=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 1st append=
 2nd append=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 ! g=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 C
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) foo) ((? x . 3) baz) ((? y) foo) ((? x) baz) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) foo) ((? x) baz) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
 1st append=
 2nd append=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 D
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) foo) ((? x . 3) baz) ((? y) foo) ((? x) baz) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)))) (((? y) foo) ((? x) baz) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
 1st append=
 2nd append=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 ! g=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some foo)) ((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 C
prove6 ! g=()
prove6 A
print-frame (((? y . 3) foo) ((? x . 3) baz) ((? y) foo) ((? x) baz) (bottom))
y = foo
x = baz
prove6 ! g=((neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? y) bar) ((? x) baz) (bottom))
 arg2=((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ())
 (cdr g)=((neq (? x) (? y)))
 `(r! ,l)=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 1st append=
 2nd append=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 ! g=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 C
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) bar) ((? x . 3) baz) ((? y) bar) ((? x) baz) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) bar) ((? x) baz) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
 1st append=
 2nd append=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 D
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) bar) ((? x . 3) baz) ((? y) bar) ((? x) baz) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)))) (((? y) bar) ((? x) baz) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
 1st append=
 2nd append=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 ! g=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some bar)) ((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 C
prove6 ! g=()
prove6 A
print-frame (((? y . 3) bar) ((? x . 3) baz) ((? y) bar) ((? x) baz) (bottom))
y = bar
x = baz
prove6 ! g=((neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... (((? y) baz) ((? x) baz) (bottom))
 arg2=((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ())
 (cdr g)=((neq (? x) (? y)))
 `(r! ,l)=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 1st append=
 2nd append=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 ! g=(r! (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) (neq (? x) (? y)))
prove6 C
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((neq (? x) (? y)))
prove6 E
prove6 ... (((? y . 3) baz) ((? x . 3) baz) ((? y) baz) ((? x) baz) (bottom))
 arg2=(((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) baz) ((? x) baz) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()))
 (cdr g)=()
 `(r! ,l)=(r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
 1st append=
 2nd append=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... (((? x . 4) baz) ((? y . 3) baz) ((? x . 3) baz) ((? y) baz) ((? x) baz) (bottom))
 arg2=((((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) baz) ((? x) baz) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())) ((eq (? x . 3) (? y . 3)) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ())) (((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y . 3) baz) ((? x . 3) baz) ((? y) baz) ((? x) baz) (bottom)) 4 ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
 (cdr g)=(! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
 `(r! ,l)=(r! (((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) baz) ((? x) baz) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())))
 1st append=
 2nd append=(r! (((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) baz) ((? x) baz) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 ! g=(r! (((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()) ((neq (? x) (? y))) (((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? y) baz) ((? x) baz) (bottom)) 3 (() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ())) ! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 C
prove6 ! g=(! fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 B
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 E
prove6 ... #f
prove6 ! g=(fail r! ((() ((some (? x)) (some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) ((bottom)) 1 ()) ((some (? y)) (neq (? x) (? y))) (((some baz)) ((eq (? x) (? x))) ((neq (? x) (? y)) (eq (? x) (? y)) ! fail) ((neq (? x) (? y)))) (((? x) baz) (bottom)) 2 ()))
prove6 D
prove6 ! g=((neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? y)) (neq (? x) (? y)))
prove6 D
prove6 ! g=((some (? x)) (some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? x)) (some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? x)) (some (? y)) (neq (? x) (? y)))
prove6 E
prove6 ... #f
prove6 ! g=((some (? x)) (some (? y)) (neq (? x) (? y)))
prove6 D
