unbq {
 program = sexpr+
 sexpr = applySyntactic<List> | atom
 bqsexpr = applySyntactic<BQList> | atom

  atom =
    | "#f" -- false
    | "#t" -- true
    | integer -- int
    | string -- string
    | symbol -- symbol

  integer = digit+ &terminator
  string = "\"" (~"\"" any)* "\"" &terminator
  symbol = symChar+ &terminator
  symChar = ~terminator  any
  terminator = ";" | "#" | "(" | ")" | "'" | bq | comma | "." | space | end

  List =
    | "(" ")" -- nil
    | "'" sexpr -- quoted
    | bq bqsexpr -- backquoted
    | "(" sexpr+ Dotted ")" -- dotted
    | "(" sexpr+ ")" -- list

  BQList =
    | "(" ")" -- nil
    | "'" bqsexpr -- quoted
    | bq bqsexpr -- backquoted
    | comma atom -- commaatom
    | atom -- atom
    | comma BQList -- commabqlist
    | "(" bqsexpr+ BQDotted ")" -- dotted
    | "(" bqsexpr+ ")" -- list

  Dotted = "." #sexpr
  BQDotted = "." #bqsexpr

  bq = "`"
  comma = ","

  comment = ";" (~"\n" any)* "\n"
  space += comment
}
