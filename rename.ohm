scm {
 program = sexpr+
 sexpr = applySyntactic<List> | atom

  atom =
    | "#f" -- false
    | "#t" -- true
    | integer -- int
    | string -- string
    | symbol -- symbol

  integer = digit+
  string = "\"" (~"\"" any)* "\""
  symbol =
    | "let*" &terminator -- letstar
    | symChar+ &terminator -- other
  symChar =
    | ~terminator "*" -- asterisk
    | ~terminator "?" -- question
    | ~terminator "!" -- bang
    | ~terminator "-" -- dash
    | ~terminator any -- other

  terminator = ";" | "#" | "(" | ")" | "'" | bq | comma | "." | space | end

  List =
    | "(" ")" -- nil
    | "'" sexpr -- quoted
    | bq sexpr -- backquoted
    | comma sexpr -- commaexpanded
    | "(" sexpr+ Dotted ")" -- dotted
    | "(" sexpr+ ")" -- list

  Dotted = "." sexpr

  bq = "`"
  comma = ","

  comment = ";" (~"\n" any)* "\n"
  space += comment
}
